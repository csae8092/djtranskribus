# Generated by Django 3.0.6 on 2020-05-23 13:53

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='TrpCollection',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('legacy_id', models.CharField(blank=True, max_length=300, verbose_name='Legacy ID')),
                ('id', models.IntegerField(help_text='Collection ID', primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Collection Name', max_length=250, verbose_name='Name')),
                ('description', models.TextField(blank=True, help_text='A brief description of the collection ', null=True, verbose_name='Description')),
                ('page_id', models.IntegerField(blank=True, help_text='Page ID', null=True, verbose_name='Page ID')),
                ('image_url', models.CharField(help_text='Image URL', max_length=250, verbose_name='Image URL')),
                ('thumb_url', models.CharField(help_text='Thumb URL', max_length=250, verbose_name='Thumb URL')),
                ('nr_of_documents', models.IntegerField(blank=True, help_text='Number of Documents', null=True, verbose_name='Number of Documents')),
                ('role', models.CharField(help_text='Role', max_length=250, verbose_name='Role')),
                ('orig_data_csv', models.TextField(blank=True, null=True, verbose_name='The original data')),
            ],
            options={
                'verbose_name': 'Collection',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TrpDocument',
            fields=[
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('legacy_id', models.CharField(blank=True, max_length=300, verbose_name='Legacy ID')),
                ('id', models.IntegerField(help_text='Document ID', primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, help_text='Document Title', null=True, verbose_name='Title')),
                ('author', models.CharField(help_text='Author of the Document', max_length=250, verbose_name='Author')),
                ('upload_time_stamp', models.IntegerField(blank=True, help_text='Upload Timestamp', null=True, verbose_name='Upload Timestamp')),
                ('created_at', models.DateField(blank=True, help_text='Creation Time of the Document', null=True, verbose_name='Creation Time')),
                ('genre', models.CharField(help_text='Genre', max_length=250, verbose_name='Genre')),
                ('writer', models.CharField(help_text='Writer/Hand', max_length=250, verbose_name='Writer')),
                ('script_type', models.CharField(help_text='Script Type', max_length=250, verbose_name='Script Type')),
                ('uploader', models.CharField(help_text='Uploader Email', max_length=250, verbose_name='Uploader (email)')),
                ('uploader_id', models.IntegerField(blank=True, help_text='Uploader ID', null=True, verbose_name='Uploader (ID)')),
                ('nr_of_pages', models.IntegerField(blank=True, help_text='Number of Pages', null=True, verbose_name='Number of Pages')),
                ('page_id', models.IntegerField(blank=True, help_text='Page ID', null=True, verbose_name='Page ID')),
                ('image_url', models.CharField(help_text='Image URL', max_length=250, verbose_name='Image URL')),
                ('thumb_url', models.CharField(help_text='Thumb URL', max_length=250, verbose_name='Thumb URL')),
                ('external_id', models.CharField(help_text='External ID', max_length=250, verbose_name='External ID')),
                ('authority', models.CharField(help_text='Authority', max_length=250, verbose_name='Authority')),
                ('description', models.TextField(blank=True, help_text='Description', null=True, verbose_name='Description')),
                ('language', models.CharField(help_text='Language of the Document', max_length=250, verbose_name='Language')),
                ('status', models.IntegerField(blank=True, help_text='Status', null=True, verbose_name='Status')),
                ('created_from_timestamp', models.IntegerField(blank=True, help_text='Created (start)', null=True, verbose_name='Created (start)')),
                ('created_to_timestamp', models.IntegerField(blank=True, help_text='Created (end)', null=True, verbose_name='Created (end)')),
                ('orig_doc_id', models.IntegerField(blank=True, help_text='origDocId', null=True, verbose_name='origDocId')),
                ('nr_of_regions', models.IntegerField(blank=True, help_text='nrOfRegions', null=True, verbose_name='nrOfRegions')),
                ('nr_of_transcribed_regions', models.IntegerField(blank=True, help_text='nrOfTranscribedRegions', null=True, verbose_name='nrOfTranscribedRegions')),
                ('nr_of_words_in_regions', models.IntegerField(blank=True, help_text='nrOfWordsInRegions', null=True, verbose_name='nrOfWordsInRegions')),
                ('nr_of_lines', models.IntegerField(blank=True, help_text='nrOfLines', null=True, verbose_name='nrOfLines')),
                ('nr_of_words_in_lines', models.IntegerField(blank=True, help_text='nrOfWordsInLines', null=True, verbose_name='nrOfWordsInLines')),
                ('nr_of_words', models.IntegerField(blank=True, help_text='nrOfWords', null=True, verbose_name='nrOfWords')),
                ('nr_of_transcribed_words', models.IntegerField(blank=True, help_text='nrOfTranscribedWords', null=True, verbose_name='nrOfTranscribedWords')),
                ('nr_of_new', models.IntegerField(blank=True, help_text='nrOfNew', null=True, verbose_name='nrOfNew')),
                ('nr_of_in_progress', models.IntegerField(blank=True, help_text='nrOfInProgress', null=True, verbose_name='nrOfInProgress')),
                ('nr_of_done', models.IntegerField(blank=True, help_text='nrOfDone', null=True, verbose_name='nrOfDone')),
                ('nr_of_final', models.IntegerField(blank=True, help_text='nrOfFinal', null=True, verbose_name='nrOfFinal')),
                ('nr_of_gt', models.IntegerField(blank=True, help_text='nrOfGT', null=True, verbose_name='nrOfGT')),
                ('orig_data_csv', models.TextField(blank=True, null=True, verbose_name='The original data')),
                ('col_list', models.ManyToManyField(help_text='Part of Collection(s)', related_name='rvn_trpdocument_col_list_trpcollection', to='archiv.TrpCollection', verbose_name='Part of Collection(s)')),
            ],
            options={
                'verbose_name': 'Document',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='TrpPage',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('legacy_id', models.CharField(blank=True, max_length=300, verbose_name='Legacy ID')),
                ('id', models.IntegerField(help_text='Page ID', primary_key=True, serialize=False, verbose_name='Page ID')),
                ('page_nr', models.IntegerField(blank=True, help_text='Page Number', null=True, verbose_name='Page Number')),
                ('page_key', models.CharField(help_text='Key of the Page', max_length=250, verbose_name='Key of the Page')),
                ('image_id', models.IntegerField(blank=True, help_text='ID of Image', null=True, verbose_name='ID of Image')),
                ('page_url', models.CharField(help_text='URL of Image', max_length=250, verbose_name='URL of Image')),
                ('thum_url', models.CharField(help_text='Thumb URL', max_length=250, verbose_name='Thumb URL')),
                ('img_file_name', models.CharField(help_text='Filename', max_length=250, verbose_name='Filename')),
                ('width', models.IntegerField(blank=True, help_text='width', null=True, verbose_name='width')),
                ('height', models.IntegerField(blank=True, help_text='height', null=True, verbose_name='height')),
                ('created', models.DateField(blank=True, help_text='created', null=True, verbose_name='created')),
                ('indexed', models.BooleanField(blank=True, default=False, help_text='indexed', null=True, verbose_name='indexed')),
                ('orig_data_csv', models.TextField(blank=True, null=True, verbose_name='The original data')),
                ('part_of', models.ForeignKey(blank=True, help_text='part of Document', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rvn_trppage_part_of_trpdocument', to='archiv.TrpDocument', verbose_name='part of Document')),
            ],
            options={
                'verbose_name': 'Page',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='TrpTranscript',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('legacy_id', models.CharField(blank=True, max_length=300, verbose_name='Legacy ID')),
                ('id', models.IntegerField(help_text='Transcript ID', primary_key=True, serialize=False, verbose_name='Transcript ID')),
                ('transcript_key', models.CharField(help_text='Key of Transcript', max_length=250, verbose_name='Key of Transcript')),
                ('transcript_url', models.CharField(help_text='Url of Transcript', max_length=250, verbose_name='Url of Transcript')),
                ('status', models.CharField(help_text='status', max_length=250, verbose_name='status')),
                ('transcriber', models.CharField(help_text='Transcriber (email)', max_length=250, verbose_name='Transcriber (email)')),
                ('transcriber_id', models.IntegerField(blank=True, help_text='Transcriber (ID)', null=True, verbose_name='Transcriber (ID)')),
                ('timestamp', models.IntegerField(blank=True, help_text='Timestamp', null=True, verbose_name='Timestamp')),
                ('nr_of_regions', models.IntegerField(blank=True, help_text='nrOfRegions', null=True, verbose_name='nrOfRegions')),
                ('nr_of_transcribed_regions', models.IntegerField(blank=True, help_text='nrOfTranscribedRegions', null=True, verbose_name='nrOfTranscribedRegions')),
                ('nr_of_words_in_regions', models.IntegerField(blank=True, help_text='nrOfWordsInRegions', null=True, verbose_name='nrOfWordsInRegions')),
                ('nr_of_lines', models.IntegerField(blank=True, help_text='nrOfLines', null=True, verbose_name='nrOfLines')),
                ('nr_of_words_in_lines', models.IntegerField(blank=True, help_text='nrOfWordsInLines', null=True, verbose_name='nrOfWordsInLines')),
                ('nr_of_words', models.IntegerField(blank=True, help_text='nrOfWords', null=True, verbose_name='nrOfWords')),
                ('gt_id', models.IntegerField(blank=True, help_text='gtId', null=True, verbose_name='gtId')),
                ('orig_data_csv', models.TextField(blank=True, null=True, verbose_name='The original data')),
                ('following', models.ForeignKey(blank=True, help_text='follows', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rvn_trptranscript_following_trptranscript', to='archiv.TrpTranscript', verbose_name='follows')),
                ('part_of', models.ForeignKey(blank=True, help_text='Transcript of Page', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rvn_trptranscript_part_of_trppage', to='archiv.TrpPage', verbose_name='Transcript of Page')),
                ('part_of_document', models.ForeignKey(blank=True, help_text='Part of Document', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rvn_trptranscript_part_of_document_trpdocument', to='archiv.TrpDocument', verbose_name='Part of Document')),
            ],
            options={
                'verbose_name': 'Transcript',
                'ordering': ['id'],
            },
        ),
    ]
